
vv_df1
vv_df2_merged_449_rows
vv_df3
vv_df3_ortho
vv_df3_para
vv_df4_median_mean_exp.prof.dists
vv_df4

df14_M_append
df14_M_dmel
df14_M_dsec
df14_P_dmel
df14_P_dsec

output_classification_2.df
ortho_df_listed_genes
para_df_listed_genes

vv_df3_ortho.lst
orthologs.exp.prof.dists
orthologs.exp.prof.dists_dataframe
orthologs.exp.prof.dists.tissue
orthologs.exp.prof.dists.tissue_dataframe

df_ortholog_mean_median

vv_df3_para.lst
paralogs.exp.prof.dists
paralogs.exp.prof.dists_dataframe
paralogs.exp.prof.dists.tissue
paralogs.exp.prof.dists.tissue_dataframe

orthologs.exp.prof.dists_stats_df
paralogs.exp.prof.dists_stats_df

df_median_mean_paralogs.exp.prof.dists.tissue_vertical
df_median_mean_paralogs.exp.prof.dists.tissue

df_median_mean_orthologs.exp.prof.dists.tissue_vertical
df_median_mean_orthologs.exp.prof.dists.tissue

paralog.expr.angle.diag.df
orths.expr.angle.diag.df

save(
     file = "xxx-data.RData")


load("data/xxx-data.RData")

save(
  vv_df1, vv_df2_merged_449_rows, vv_df3, vv_df3_ortho, vv_df3_para,
  vv_df4_median_mean_exp.prof.dists, vv_df4, df14_M_append, df14_M_dmel,
  df14_M_dsec, df14_P_dmel, df14_P_dsec, output_classification_2.df,
  ortho_df_listed_genes, para_df_listed_genes, vv_df3_ortho.lst,
  orthologs.exp.prof.dists, orthologs.exp.prof.dists_dataframe,
  orthologs.exp.prof.dists.tissue, orthologs.exp.prof.dists.tissue_dataframe,
  df_ortholog_mean_median, vv_df3_para.lst, paralogs.exp.prof.dists,
  paralogs.exp.prof.dists_dataframe, paralogs.exp.prof.dists.tissue,
  paralogs.exp.prof.dists.tissue_dataframe, orthologs.exp.prof.dists_stats_df, plot_df_exp.prof.dists_ortho_para,
  paralogs.exp.prof.dists_stats_df,
  df_median_mean_paralogs.exp.prof.dists.tissue_vertical,
  df_median_mean_paralogs.exp.prof.dists.tissue,
  df_median_mean_orthologs.exp.prof.dists.tissue_vertical,
  df_median_mean_orthologs.exp.prof.dists.tissue,
  file = "xxxx-data.RData"
)





vv_df4_median_mean_exp.prof.dists
vv_df4

df14_P_dmel


df_median_mean_paralogs.exp.prof.dists.tissue
df_median_mean_orthologs.exp.prof.dists.tissue
















names(ortholog_stats)

library(dplyr)

# filter the df

filtered_df <- output_classification_2.df %>% filter(para_ortho == "paralog")


# df transformation, Group by 'Family' and summarize 'Gene' into a list

df_unique_family <- ortho_df %>%
  group_by(Family) %>%
  summarize(Gene = list(Gene), .groups = 'drop')

  df_unique_family <- ortho_df %>%
  group_by(Family) %>%
  summarize(Gene = list(Gene), .groups = 'drop')

# Alternatively, if you want to combine the genes into a single string:

df_unique_family_str <- df %>%
  group_by(Family) %>%
  summarize(Gene = paste(Gene, collapse = ", "), .groups = 'drop')

--------------------------------------

merged_df <- left_join(df1, df2, by = "Family")

merfed_df1 <- left_join(vv_df3, para_df_listed_genes, by = "Family_id")
  

Inner Join (only matching rows):

merged_df <- inner_join(df1, df2, by = "Family")
--------------------------------------




para_list <- vv_df3_para %>%
  group_by(Family) %>%
  summarise(para_genes = list(para_genes)) %>%
  {setNames(.$para_genes, .$Family)}

# Extract cluster numbers and convert to numeric
cluster_numbers <- as.numeric(gsub("cluster_", "", names(para_list)))

# Sort based on these numbers
sorted_list <- para_list[order(cluster_numbers)]

vv_df3_ortho.lst <- lapply(vv_df3_ortho.lst, function(x) unlist(x, recursive = FALSE))



df14_P_dmel$Gene <- sub("^dmel-", "", df14_P_dmel$Gene)



--------------------------------------



orthologs.exp.prof.dists_stats_df
paralogs.exp.prof.dists_stats_df

paralogs.exp.prof.dists.tissue
paralogs.exp.prof.dists.tissue_dataframe


-------------------------------------------------------------

library(dplyr)
library(tibble)
library(purrr)

# Assuming your list is named 'cluster_list' and your dataframe is 'df'

cluster_df <- enframe(orthologs.exp.prof.dists.tissue, name = "Family", value = "orthologs.exp.prof.dists.tissue")

# Merge with the original dataframe
result_df <- vv_df3_ortho_expressions %>%
  left_join(cluster_df, by = "Family") %>%
  mutate(orthologs.exp.prof.dists.tissue = coalesce(orthologs.exp.prof.dists.tissue, list(numeric(0))))


# Assuming your list is named 'nested_list'
result_df <- orthologs.exp.prof.dists.tissue %>%
  enframe(name = "Family", value = "Tissue_Data") %>%
  unnest_wider(Tissue_Data, names_sep = "_") %>%
  pivot_longer(cols = -Family, names_to = "Tissue", values_to = "Values") %>%
  mutate(Values = map(Values, as.numeric)) %>%
  unnest(Values) %>%
  group_by(Family, Tissue) %>%
  mutate(Gene_Index = row_number()) %>%
  ungroup()

-------------------------------------------------------------

library(tidyr)
library(dplyr)

df_wide_paralogs <- paralogs.exp.prof.dists.tissue_dataframe %>%
  distinct(Family, Tissue, Values) %>%  # Ensure uniqueness of rows
  pivot_wider(names_from = Tissue, values_from = Values)


colnames(orthologs.exp.prof.dists.tissue) <- c("Family", "Tissue", "Value")





df_transformed <- result %>%
  pivot_wider(
    id_cols = Tissue,
    names_from = Cluster,
    values_from = c(Mean, Median),
    names_glue = "{Cluster}_{.value}"
  ) %>%
  select(Tissue, sort(colnames(.)))




df_cleaned <- ortholog_stats %>% 
  filter(Value != "Invalid Number")

df_cleaned <- df_cleaned[ , c("Statistic", "Gene_Class", "Value")]

df_cleaned$Value <- as.numeric(df_cleaned$Value)

df_transformed <- df_cleaned %>%
  pivot_wider(names_from = Statistic, values_from = Value)

sorted_df <- df_transformed %>%
  arrange(as.numeric(gsub("cluster_", "", Family)))

orthologs.exp.prof.dists_stats_df <- sorted_df



-----------------------------------------------------------------------------------


# Plots exp.prof.dists.tissue 
------------------------------


- Plots generated:

  - 1. `expressionAngleToDiagonalBoxplot.pdf`					        (Plot-Data-1) (Section-3)

  - 2. `relativeExpressionVersatilityBoxplot.pdf`					    (Plot-Data-1) (Section-3)

  - 3. `medianExpressionProfileDistancesPerGeneGroupClassesBoxplot.pdf`   
        (Plot-Data-2) (Section-3)

  - 4. `medianExpressionProfileDistancesPerGeneGroupClassesBoxplot_NoPosSel.pdf`  
        (Plot-Data-2) (Section-3)

  - 5. `medianExpressionProfileDistancesPerGeneGroupClassesAndOrthologDistinctionBoxplot.pdf`   
        (Plot-Data-2) (Section-3)

  - 6. `medianExpressionProfileDistancesPerGeneGroupClassesAndOrthologDistinctionBoxplot_NoPosSel.pdf`  
        (Plot-Data-2) (Section-3)

  - 7. `medianExpressionDistsTandemNonOrthsAndExpandedNonOrthsHist.pdf`   




- section-4

- Plots generated:

  - 1. `expressionAngleToDiagonalBoxplot.pdf`                          (Plot-Data-1)

  - 2. `relativeExpressionVersatilityBoxplot.pdf`                      (Plot-Data-1)

  - 3. `meanTissueVersatilityDiffsAfterDuplicationBoxplot.pdf`         (Plot-Data-2)

  - 4. `meanTissueVersatilityDiffsAfterDuplicationHistograms.pdf`      (Plot-Data-2)

  - 5. `afterDuplicationAngleBetweenOrth2DiagVecsBoxplot.pdf`          (Plot-Data-2)

  - 6. `afterDuplicationAngleBetweenOrth2DiagVecsHistograms.pdf`       (Plot-Data-2)

  - 7. `meanChangeInAngleBetweenOrthOnDiagsBoxplot.pdf`                (Plot-Data-3)
